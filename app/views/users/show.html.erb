<div class="cover-user-show">
  <div class="container d-flex flex-column align-items-center">
    <div class="row mt-5">
      <% if user_signed_in? && @user == current_user %>
        <h1 class="fw-bold">マイページ</h1>
      <% else %>
        <h1 class="font-weight-normal"><%= @user.name %>さんのページ</h1>
      <% end %>
    </div>

    <% if user_signed_in? && @user == current_user %>
    <div class="d-flex align-self-end mb-0">
      <%= link_to "グラフの作成", graphs_new_path, class:"btn btn-warning graph-button" %> 
      <%= link_to "プロフィール編集", edit_user_path(@user),class: "btn btn-success edit-button" %>
    </div>
    <% end %>

    <div class="d-flex align-self-end mb-3">
      <% if current_user != @user %>
        <% if (current_user.following? @user) && (@user.following? current_user) %>
          <% if @isRoom == true %>
            <a href="/rooms/<%= @roomId %>" class="btn btn-primary space-between-buttons">チャットへ</a>
          <% else %>
            <%= form_for @room do |f| %>
              <%= fields_for @entry do |e| %>
                <%= e.hidden_field :user_id, value: @user.id %>
              <% end %>
              <%= f.submit "チャットを始める", class: "btn btn-primary space-between-buttons" %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>

      <% if current_user != @user %>
        <% if current_user.following?(@user) %>
          <%= link_to 'フォロー外す', user_relationships_path(@user.id), data: { "turbo-method": :delete }, class: "btn btn-danger" %>
        <% else %>
          <%= link_to 'フォローする', user_relationships_path(@user.id),data: { "turbo-method": :post }, class: "btn btn-success" %>
        <% end %>
      <% end %>
    </div>

    <div class="user-profile d-flex w-100">
      <%= attachment_image_tag @user, :profile_image, size: '100x100', fallback: "no_image.svg", class: "mb-3 profile-img" %>
      <h4 class="ml-3 mb-3 card w-100 profile"><%= @user.profile %></h4>
    </div>
    <div class="d-flex">
      <%= link_to follows_user_path(@user) do %>
        <h6>フォロー<%= @following_users.count %></h6>
      <% end %>
      <%= link_to followers_user_path(@user) do %>
        <h6>フォロワー<%= @follower_users.count %></h6>
      <% end %>
    </div>

    <canvas id="myChart"></canvas>

    <% if current_user != @user %>
      <%= link_to "戻る", :back, class:"btn btn-secondary" %>
    <% end %>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      var labels = <%= raw(@labels.to_json) %>;
      var values = <%= raw(@values.to_json) %>;
      var dataWithLinks = <%= raw(@data_with_links.to_json) %>;
      var isCurrentUserPage = <%= user_signed_in? && @user == current_user %>;
      var ctx = document.getElementById('myChart');
      var myChart = new Chart(ctx, {
          type: 'line',
          data: {
              labels: labels,
              datasets: [{
                  label: 'モチベーション',
                  data: values,
                  backgroundColor: 'rgba(75,192,192,0.2)',
                  borderColor: 'rgba(75,192,192,1)',
                  borderWidth: 3,
                  pointRadius: 5,
                  pointHoverRadius:10
              }]
          },
          options: {
            responsive:true,
            tooltips: {
                enabled: true,
                callbacks: {
                    title: function(tooltipItem, data) {
                        return '年齢: ' + data.labels[tooltipItem[0].index];
                    },
                    label: function(tooltipItem, data) {
                        var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                        var comment = dataWithLinks[tooltipItem.index].comment; 
                        console.log("index: " + tooltipItem.index);
                        console.log("dataWithLinks: ", dataWithLinks);
                        return '数値: ' + value + ', コメント: ' + (comment || 'コメントなし');
                    }
                }
            }
        }
      });
    </script>
  </div>
</div>

<div id="comment-container" style="margin-top: 20px; font-size: 18px;">
</div>

<script>
document.addEventListener("turbo:load", function() {
  const chartElement = document.getElementById('myChart');
  if (chartElement){
  const dataWithLinks = <%= raw(@data_with_links.to_json) %>;
  chartElement.onclick = function(event) {
    if (!isCurrentUserPage) return;
    const chart = myChart
    const points = chart.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);
    if (points.length) {
      const index = points[0].index; // クリックされた点のインデックスを取得
      const id = dataWithLinks[index].id; // idを取得
      const comment = dataWithLinks[index].comment;
      const link = `/graphs/${id}/edit`; // リンクを作成

      const commentContainer = document.getElementById('comment-container');
      if (comment) {
        commentContainer.innerHTML = `<p>コメント: ${comment}</p>`;
      } else {
        commentContainer.innerHTML = `<p>コメントはありません。</p>`;
      }

       setTimeout(function() {
          window.location.href = link; // 編集ページにリダイレクト
        }, 100); // 100ミリ秒後に遷移
    }
  };
      }else{
         console.warn("Canvas element with id 'myChart' not found!");
      }
});
</script>


 